{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nconst HeaderValue = [\"Service Name\", \"Category\", \"Vehicle CC\", \"Description\", \"Price\", \"Actions\"];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (res.code == 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData(res.data.message);\n      setFilterOption(res.data.message.map(function (el) {\n        return el.service_id.service_name;\n      }));\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Service_Api.Add_Servie(fields);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, {\n        service_name: fields.data.service_name\n      });\n    }\n\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, {\n        description: fields.data.description\n      });\n    }\n\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, {\n        price: fields.data.price\n      });\n    }\n\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, {\n        tax: fields.data.tax\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n\n    if (vehicle_cc.code == 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.service_id.service_name == opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    data: setFilterData,\n    Header: HeaderValue,\n    selected: selected,\n    filterOption: filterOption,\n    onchangeOption: (e, opt) => onchangeOption(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddServiceDialog, {\n    closeModal: closeModal,\n    fields: row,\n    vehicleCC: vehicle => getVehicleCC(vehicle),\n    category: category,\n    vehicle: vehicle,\n    update: (updated, id) => Update_Serice(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Service;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js"],"names":["React","CommonTable","Service_Api","Category_Api","Vehicle_Api","AddServiceDialog","BPNotification","HeaderValue","Service","data","setData","useState","modalOpen","setmodalOpen","successModal","setSuccessModal","message","setMessage","row","setRow","category","setCategory","vehicle","setVehicle","filterOption","setFilterOption","filterData","setFilterData","selected","setSelected","addService","closeModal","getData","res","Get_Service","Get_Category","Get_Vehicle","code","messsage","map","el","service_id","service_name","submit","fields","Add_Servie","setTimeout","Update","Update_Serice","id","row1","filter","x","_id","data1","Object","assign","description","price","tax","obj","Update_Service","error","getVehicleCC","vehicle_cc","Get_Vehicle_by_name","onchangeOption","e","opt","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\n\nconst HeaderValue = [\n  \"Service Name\",\n  \"Category\",\n  \"Vehicle CC\",\n  \"Description\",\n  \"Price\",\n  \"Actions\"\n];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (res.code == 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData(res.data.message);\n      setFilterOption(\n        res.data.message.map(function(el) {\n          return el.service_id.service_name;\n        })\n      );\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Service_Api.Add_Servie(fields);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, { service_name: fields.data.service_name });\n    }\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, { description: fields.data.description });\n    }\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, { price: fields.data.price });\n    }\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, { tax: fields.data.tax });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n    if (vehicle_cc.code == 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.service_id.service_name == opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        data={setFilterData}\n        Header={HeaderValue}\n        selected={selected}\n        filterOption={filterOption}\n        onchangeOption={(e, opt) => onchangeOption(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      {modalOpen && (\n        <AddServiceDialog\n          closeModal={closeModal}\n          fields={row}\n          vehicleCC={vehicle => getVehicleCC(vehicle)}\n          category={category}\n          vehicle={vehicle}\n          update={(updated, id) => Update_Serice(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}