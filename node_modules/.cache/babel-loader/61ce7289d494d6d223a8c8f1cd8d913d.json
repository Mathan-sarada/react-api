{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/components/common/BPNotification.js\";\nimport React from \"react\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  root: {\n    color: \"rgb(63, 148, 181)\",\n    fontSize: \"15px\",\n    border: \"1px solid rgb(63, 148, 181)\",\n    background: \"#6e8ac80f\"\n  }\n});\nexport default function BPSuccessNotification(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"right\"\n  });\n  const {\n    vertical,\n    horizontal,\n    open\n  } = state;\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SnackbarContent, {\n    message: \"I love candy. I love cookies. I love cupcakes. \\\n    I love cheesecake. I love chocolate.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n} // export function BPErrorNotification(props) {\n//   const [state, setState] = React.useState({\n//     open: false,\n//     vertical: \"bottom\",\n//     horizontal: \"right\"\n//   });\n//   const { vertical, horizontal, open } = state;\n//   const handleClose = () => {\n//     setState({ ...state, open: false });\n//   };\n//   return (\n//     <Snackbar\n//       anchorOrigin={{ vertical, horizontal }}\n//       open={true}\n//       onClose={handleClose}\n//       message={props.message}\n//       key={vertical + horizontal}\n//     />\n//   );\n// }","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/components/common/BPNotification.js"],"names":["React","SnackbarContent","makeStyles","useStyles","root","color","fontSize","border","background","BPSuccessNotification","props","classes","state","setState","useState","open","vertical","horizontal","handleClose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,mBADH;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,MAAM,EAAE,6BAHJ;AAIJC,IAAAA,UAAU,EAAE;AAJR;AADqB,CAAD,CAA5B;AASA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE,KADiC;AAEvCC,IAAAA,QAAQ,EAAE,QAF6B;AAGvCC,IAAAA,UAAU,EAAE;AAH2B,GAAf,CAA1B;AAMA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBF,IAAAA;AAAxB,MAAiCH,KAAvC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,MAAAA,IAAI,EAAE;AAAlB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,eAAD;AACE,IAAA,OAAO,EACL;yCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"rgb(63, 148, 181)\",\n    fontSize: \"15px\",\n    border: \"1px solid rgb(63, 148, 181)\",\n    background: \"#6e8ac80f\"\n  }\n});\n\nexport default function BPSuccessNotification(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"bottom\",\n    horizontal: \"right\"\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  return (\n    <SnackbarContent\n      message={\n        \"I love candy. I love cookies. I love cupcakes. \\\n    I love cheesecake. I love chocolate.\"\n      }\n    />\n  );\n}\n\n// export function BPErrorNotification(props) {\n//   const [state, setState] = React.useState({\n//     open: false,\n//     vertical: \"bottom\",\n//     horizontal: \"right\"\n//   });\n\n//   const { vertical, horizontal, open } = state;\n\n//   const handleClose = () => {\n//     setState({ ...state, open: false });\n//   };\n\n//   return (\n//     <Snackbar\n//       anchorOrigin={{ vertical, horizontal }}\n//       open={true}\n//       onClose={handleClose}\n//       message={props.message}\n//       key={vertical + horizontal}\n//     />\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}