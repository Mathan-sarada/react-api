{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Orders.js\";\nimport React, { Fragment } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Orders_Api } from \"../api/orders_api\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddMobileDialog from \"../components/forms/addMobile\";\nimport BPNotification from \"../components/common/BPNotification\";\nconst HeaderValue = [\"Mobile\", \"Location\", \"Vehicle Name\", \"Service\", \"Description\", \"Amount\", \"Tax\", \"Action\"];\n\nconst Orders = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(\"\");\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const getData = async () => {\n    const orders = await Orders_Api.Get_Orders();\n    const service = await Service_Api.Get_Service();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (orders.code === 200) {\n      orders.data.message.map(row => {\n        const vehicle1 = vehicle.data.messsage.filter(x => x._id === row.product_id.vehicle_id)[0];\n        const service1 = service.data.message.filter(x => x.service_id._id === row.product_id.service_id)[0];\n        row = Object.assign(row, {\n          vehicle_name: vehicle1.vehicle_name\n        }, {\n          service_name: service1.service_id.service_name\n        });\n      });\n      setData(orders.data.message);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Orders_Api.verifyMobile(orderId, fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setBtnLoading(false);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setBtnLoading(false);\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const Update = id => {\n    setOrderId(id);\n    setmodalOpen(true);\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    Update: Update,\n    Header: HeaderValue,\n    data: data,\n    page: \"orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddMobileDialog, {\n    closeModal: closeModal,\n    btnLoading: btnLoading,\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Orders;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Orders.js"],"names":["React","Fragment","CommonTable","Orders_Api","Service_Api","Vehicle_Api","AddMobileDialog","BPNotification","HeaderValue","Orders","modalOpen","setmodalOpen","useState","data","setData","successModal","setSuccessModal","message","setMessage","loading","setLoading","orderId","setOrderId","btnLoading","setBtnLoading","getData","orders","Get_Orders","service","Get_Service","vehicle","Get_Vehicle","code","map","row","vehicle1","messsage","filter","x","_id","product_id","vehicle_id","service1","service_id","Object","assign","vehicle_name","service_name","closeModal","submit","fields","res","verifyMobile","setTimeout","error","Update","id","showToast","msg","useEffect"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Orders_Api } from \"../api/orders_api\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddMobileDialog from \"../components/forms/addMobile\";\nimport BPNotification from \"../components/common/BPNotification\";\n\nconst HeaderValue = [\n  \"Mobile\",\n  \"Location\",\n  \"Vehicle Name\",\n  \"Service\",\n  \"Description\",\n  \"Amount\",\n  \"Tax\",\n  \"Action\"\n];\n\nconst Orders = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(\"\");\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const getData = async () => {\n    const orders = await Orders_Api.Get_Orders();\n    const service = await Service_Api.Get_Service();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (orders.code === 200) {\n      orders.data.message.map(row => {\n        const vehicle1 = vehicle.data.messsage.filter(\n          x => x._id === row.product_id.vehicle_id\n        )[0];\n        const service1 = service.data.message.filter(\n          x => x.service_id._id === row.product_id.service_id\n        )[0];\n        row = Object.assign(\n          row,\n          { vehicle_name: vehicle1.vehicle_name },\n          { service_name: service1.service_id.service_name }\n        );\n      });\n      setData(orders.data.message);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Orders_Api.verifyMobile(orderId, fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setBtnLoading(false);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setBtnLoading(false);\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const Update = id => {\n    setOrderId(id);\n    setmodalOpen(true);\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <Fragment>\n      <CommonTable\n        loading={loading}\n        Update={Update}\n        Header={HeaderValue}\n        data={data}\n        page=\"orders\"\n      />\n      {modalOpen && (\n        <AddMobileDialog\n          closeModal={closeModal}\n          btnLoading={btnLoading}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </Fragment>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}