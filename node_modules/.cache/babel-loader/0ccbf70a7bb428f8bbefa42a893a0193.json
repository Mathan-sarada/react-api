{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Auth/SignIn.js\";\nimport React from \"react\";\nimport store from \"store\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../../components/forms/Login\";\nimport { User_api } from \"../../api/user_api\";\nimport BPSuccessNotification from \"../../components/common/BPNotification\";\n\nconst SignIn = () => {\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const history = useHistory();\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await User_api.SignIn(fields);\n\n    if (res.code != 200) {\n      setMessage(res.data.message);\n      setBtnLoading(false);\n      setSuccessModal(\"true\");\n    } else {\n      store.set(\"apiKey\", {\n        apiKey: res.data.error.apiKey\n      });\n      store.set(\"secretKey\", {\n        secretKey: res.data.error.secretKey\n      });\n      store.set(\"adminKey\", {\n        adminKey: res.data.error.adminKey\n      });\n      setBtnLoading(false);\n      history.push(`/vendor`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    submit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPSuccessNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Auth/SignIn.js"],"names":["React","store","useHistory","Login","User_api","BPSuccessNotification","SignIn","successModal","setSuccessModal","useState","message","setMessage","history","btnLoading","setBtnLoading","submit","fields","res","code","data","set","apiKey","error","secretKey","adminKey","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMG,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8Bd,KAAK,CAACS,QAAN,CAAe,KAAf,CAApC;;AAEA,QAAMM,MAAM,GAAG,MAAMC,MAAN,IAAgB;AAC7BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMG,GAAG,GAAG,MAAMb,QAAQ,CAACE,MAAT,CAAgBU,MAAhB,CAAlB;;AACA,QAAIC,GAAG,CAACC,IAAJ,IAAY,GAAhB,EAAqB;AACnBP,MAAAA,UAAU,CAACM,GAAG,CAACE,IAAJ,CAAST,OAAV,CAAV;AACAI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,MAAAA,eAAe,CAAC,MAAD,CAAf;AACD,KAJD,MAIO;AACLP,MAAAA,KAAK,CAACmB,GAAN,CAAU,QAAV,EAAoB;AAAEC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,IAAJ,CAASG,KAAT,CAAeD;AAAzB,OAApB;AACApB,MAAAA,KAAK,CAACmB,GAAN,CAAU,WAAV,EAAuB;AAAEG,QAAAA,SAAS,EAAEN,GAAG,CAACE,IAAJ,CAASG,KAAT,CAAeC;AAA5B,OAAvB;AACAtB,MAAAA,KAAK,CAACmB,GAAN,CAAU,UAAV,EAAsB;AAAEI,QAAAA,QAAQ,EAAEP,GAAG,CAACE,IAAJ,CAASG,KAAT,CAAeE;AAA3B,OAAtB;AACAV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,OAAO,CAACa,IAAR,CAAc,SAAd;AACD;AACF,GAdD;;AAgBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,YAAY,iBAAI,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CADF;AAMD,CA5BD;;AA8BA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport store from \"store\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../../components/forms/Login\";\nimport { User_api } from \"../../api/user_api\";\nimport BPSuccessNotification from \"../../components/common/BPNotification\";\n\nconst SignIn = () => {\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const history = useHistory();\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await User_api.SignIn(fields);\n    if (res.code != 200) {\n      setMessage(res.data.message);\n      setBtnLoading(false);\n      setSuccessModal(\"true\");\n    } else {\n      store.set(\"apiKey\", { apiKey: res.data.error.apiKey });\n      store.set(\"secretKey\", { secretKey: res.data.error.secretKey });\n      store.set(\"adminKey\", { adminKey: res.data.error.adminKey });\n      setBtnLoading(false);\n      history.push(`/vendor`);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Login submit={submit} />\n      {successModal && <BPSuccessNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}