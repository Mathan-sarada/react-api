{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue1 = [\"Service Name\", \"Category\", \"Vehicle CC\", \"Description\", \"Price\", \"Status\", \"Actions\"];\nconst HeaderValue2 = [\"Service Name\", \"Category\", \"Description\", \"Price\", \"Status\", \"Actions\"];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption1, setFilterOption1] = React.useState([]);\n  const [filterOption2, setFilterOption2] = React.useState([]);\n  const [filterData2, setFilterData2] = React.useState([]);\n  const [filterData1, setFilterData1] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message.filter(x => x.status == true));\n      setVehicle(vehicle.data.messsage.filter(x => x.status == true));\n      setFilterData1(res.data.message.filter(x => x.service_type === \"bike service\"));\n      setFilterData2(res.data.message.filter(x => x.service_type === \"battery service\"));\n      setFilterOption1([...new Set(res.data.message.filter(x => x.service_type === \"bike service\").map(function (el) {\n        return el.service_name;\n      }))]);\n      setFilterOption2([...new Set(res.data.message.filter(x => x.service_type === \"battery service\").map(function (el) {\n        return el.service_name;\n      }))]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n\n    if (row1.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, {\n        service_name: fields.data.service_name\n      });\n    }\n\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, {\n        description: fields.data.description\n      });\n    }\n\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, {\n        price: fields.data.price\n      });\n    }\n\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, {\n        tax: fields.data.tax\n      });\n    }\n\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, {\n        status: fields.data.status\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption1 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData1(data.filter(x => x.service_name === opt && x.service_type === \"bike service\"));\n    } else {\n      setFilterData1(data.filter(x => x.service_type == \"bike service\"));\n    }\n  };\n\n  const onchangeOption2 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData2(data.filter(x => x.service_name === opt && x.service_type === \"battery service\"));\n    } else {\n      setFilterData2(data.filter(x => x.service_type == \"battery service\"));\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    data: filterData1,\n    Header: HeaderValue1,\n    selected: selected,\n    filterOption: filterOption1,\n    onchangeOption: (e, opt) => onchangeOption1(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    data: filterData2,\n    Header: HeaderValue2,\n    selected: selected,\n    page: \"service\",\n    filterOption: filterOption2,\n    onchangeOption: (e, opt) => onchangeOption2(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddServiceDialog, {\n    closeModal: closeModal,\n    fields: row,\n    showToast: showToast,\n    vehicleCC: vehicle => getVehicleCC(vehicle),\n    category: category,\n    vehicle: vehicle,\n    btnLoading: btnLoading,\n    update: (updated, id) => Update_Serice(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Service;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js"],"names":["React","CommonTable","Service_Api","Category_Api","Vehicle_Api","AddServiceDialog","BPNotification","requestDataFormat","HeaderValue1","HeaderValue2","Service","data","setData","useState","modalOpen","setmodalOpen","successModal","setSuccessModal","message","setMessage","row","setRow","category","setCategory","vehicle","setVehicle","filterOption1","setFilterOption1","filterOption2","setFilterOption2","filterData2","setFilterData2","filterData1","setFilterData1","selected","setSelected","loading","setLoading","btnLoading","setBtnLoading","addService","closeModal","getData","res","Get_Service","Get_Category","Get_Vehicle","code","filter","x","status","messsage","service_type","Set","map","el","service_name","submit","fields","Add_Servie","showToast","errorHandler","error","Update","Update_Serice","id","row1","_id","data1","Object","assign","description","price","tax","obj","Update_Service","getVehicleCC","vehicle_cc","Get_Vehicle_by_name","onchangeOption1","e","opt","onchangeOption2","msg","setTimeout","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\n\nconst HeaderValue1 = [\n  \"Service Name\",\n  \"Category\",\n  \"Vehicle CC\",\n  \"Description\",\n  \"Price\",\n  \"Status\",\n  \"Actions\"\n];\n\nconst HeaderValue2 = [\n  \"Service Name\",\n  \"Category\",\n  \"Description\",\n  \"Price\",\n  \"Status\",\n  \"Actions\"\n];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption1, setFilterOption1] = React.useState([]);\n  const [filterOption2, setFilterOption2] = React.useState([]);\n  const [filterData2, setFilterData2] = React.useState([]);\n  const [filterData1, setFilterData1] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message.filter(x => x.status == true));\n      setVehicle(vehicle.data.messsage.filter(x => x.status == true));\n      setFilterData1(\n        res.data.message.filter(x => x.service_type === \"bike service\")\n      );\n      setFilterData2(\n        res.data.message.filter(x => x.service_type === \"battery service\")\n      );\n      setFilterOption1([\n        ...new Set(\n          res.data.message\n            .filter(x => x.service_type === \"bike service\")\n            .map(function(el) {\n              return el.service_name;\n            })\n        )\n      ]);\n      setFilterOption2([\n        ...new Set(\n          res.data.message\n            .filter(x => x.service_type === \"battery service\")\n            .map(function(el) {\n              return el.service_name;\n            })\n        )\n      ]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n    if (row1.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, { service_name: fields.data.service_name });\n    }\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, { description: fields.data.description });\n    }\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, { price: fields.data.price });\n    }\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, { tax: fields.data.tax });\n    }\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, { status: fields.data.status });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption1 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData1(\n        data.filter(\n          x => x.service_name === opt && x.service_type === \"bike service\"\n        )\n      );\n    } else {\n      setFilterData1(data.filter(x => x.service_type == \"bike service\"));\n    }\n  };\n\n  const onchangeOption2 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData2(\n        data.filter(\n          x => x.service_name === opt && x.service_type === \"battery service\"\n        )\n      );\n    } else {\n      setFilterData2(data.filter(x => x.service_type == \"battery service\"));\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        loading={loading}\n        data={filterData1}\n        Header={HeaderValue1}\n        selected={selected}\n        filterOption={filterOption1}\n        onchangeOption={(e, opt) => onchangeOption1(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      <CommonTable\n        loading={loading}\n        data={filterData2}\n        Header={HeaderValue2}\n        selected={selected}\n        page={\"service\"}\n        filterOption={filterOption2}\n        onchangeOption={(e, opt) => onchangeOption2(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      {modalOpen && (\n        <AddServiceDialog\n          closeModal={closeModal}\n          fields={row}\n          showToast={showToast}\n          vehicleCC={vehicle => getVehicleCC(vehicle)}\n          category={category}\n          vehicle={vehicle}\n          btnLoading={btnLoading}\n          update={(updated, id) => Update_Serice(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}