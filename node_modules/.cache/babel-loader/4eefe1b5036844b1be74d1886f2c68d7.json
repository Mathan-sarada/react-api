{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue1 = [\"Service Name\", \"Category\", \"Vehicle CC\", \"Description\", \"Price\", \"Actions\"];\nconst HeaderValue2 = [\"Service Name\", \"Category\", \"Description\", \"Price\", \"Actions\"];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData2, setFilterData2] = React.useState([]);\n  const [filterData1, setFilterData1] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData1(res.data.message.filter(x => x.service_type == \"bike service\"));\n      setFilterData2(res.data.message.filter(x => x.service_type == \"battery service\"));\n      setFilterOption([...new Set(res.data.message.map(function (el) {\n        return el.service_name;\n      }))]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, {\n        service_name: fields.data.service_name\n      });\n    }\n\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, {\n        description: fields.data.description\n      });\n    }\n\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, {\n        price: fields.data.price\n      });\n    }\n\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, {\n        tax: fields.data.tax\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption1 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData1(data.filter(x => x.service_name === opt));\n    } else {\n      setFilterData1(data);\n    }\n  };\n\n  const onchangeOption2 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData2(data.filter(x => x.service_name === opt));\n    } else {\n      setFilterData2(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    data: filterData1,\n    Header: HeaderValue1,\n    selected: selected,\n    filterOption: filterOption,\n    onchangeOption: (e, opt) => onchangeOption1(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    data: filterData2,\n    Header: HeaderValue2,\n    selected: selected,\n    filterOption: filterOption,\n    onchangeOption: (e, opt) => onchangeOption2(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddServiceDialog, {\n    closeModal: closeModal,\n    fields: row,\n    showToast: showToast,\n    vehicleCC: vehicle => getVehicleCC(vehicle),\n    category: category,\n    vehicle: vehicle,\n    btnLoading: btnLoading,\n    update: (updated, id) => Update_Serice(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Service;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js"],"names":["React","CommonTable","Service_Api","Category_Api","Vehicle_Api","AddServiceDialog","BPNotification","requestDataFormat","HeaderValue1","HeaderValue2","Service","data","setData","useState","modalOpen","setmodalOpen","successModal","setSuccessModal","message","setMessage","row","setRow","category","setCategory","vehicle","setVehicle","filterOption","setFilterOption","filterData2","setFilterData2","filterData1","setFilterData1","selected","setSelected","loading","setLoading","btnLoading","setBtnLoading","addService","closeModal","getData","res","Get_Service","Get_Category","Get_Vehicle","code","messsage","filter","x","service_type","Set","map","el","service_name","submit","fields","Add_Servie","showToast","errorHandler","error","Update","Update_Serice","id","row1","_id","data1","service_id","Object","assign","description","price","tax","obj","Update_Service","getVehicleCC","vehicle_cc","Get_Vehicle_by_name","onchangeOption1","e","opt","onchangeOption2","msg","setTimeout","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\n\nconst HeaderValue1 = [\n  \"Service Name\",\n  \"Category\",\n  \"Vehicle CC\",\n  \"Description\",\n  \"Price\",\n  \"Actions\"\n];\n\nconst HeaderValue2 = [\n  \"Service Name\",\n  \"Category\",\n  \"Description\",\n  \"Price\",\n  \"Actions\"\n];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData2, setFilterData2] = React.useState([]);\n  const [filterData1, setFilterData1] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData1(\n        res.data.message.filter(x => x.service_type == \"bike service\")\n      );\n      setFilterData2(\n        res.data.message.filter(x => x.service_type == \"battery service\")\n      );\n      setFilterOption([\n        ...new Set(\n          res.data.message.map(function(el) {\n            return el.service_name;\n          })\n        )\n      ]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, { service_name: fields.data.service_name });\n    }\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, { description: fields.data.description });\n    }\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, { price: fields.data.price });\n    }\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, { tax: fields.data.tax });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption1 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData1(data.filter(x => x.service_name === opt));\n    } else {\n      setFilterData1(data);\n    }\n  };\n\n  const onchangeOption2 = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData2(data.filter(x => x.service_name === opt));\n    } else {\n      setFilterData2(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        loading={loading}\n        data={filterData1}\n        Header={HeaderValue1}\n        selected={selected}\n        filterOption={filterOption}\n        onchangeOption={(e, opt) => onchangeOption1(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      <CommonTable\n        loading={loading}\n        data={filterData2}\n        Header={HeaderValue2}\n        selected={selected}\n        filterOption={filterOption}\n        onchangeOption={(e, opt) => onchangeOption2(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      {modalOpen && (\n        <AddServiceDialog\n          closeModal={closeModal}\n          fields={row}\n          showToast={showToast}\n          vehicleCC={vehicle => getVehicleCC(vehicle)}\n          category={category}\n          vehicle={vehicle}\n          btnLoading={btnLoading}\n          update={(updated, id) => Update_Serice(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}