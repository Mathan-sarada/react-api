{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Auth/SignIn.js\";\nimport React from \"react\";\nimport store from \"store\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../../components/forms/Login\";\nimport { User_api } from \"../../api/user_api\";\nimport BPSuccessNotification from \"../../components/common/BPNotification\";\nimport { requestDataFormat } from \"../../components/common/ErrorFormat\";\n\nconst SignIn = () => {\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const history = useHistory();\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await User_api.SignIn(fields);\n\n    if (res.code !== 200) {\n      console.log(requestDataFormat.errorHandler(res.data.message));\n      setMessage(requestDataFormat.errorHandler(res.data.message));\n      setBtnLoading(false);\n      setSuccessModal(\"true\");\n    } else {\n      store.set(\"apiKey\", {\n        apiKey: res.data.error.apiKey\n      });\n      store.set(\"secretKey\", {\n        secretKey: res.data.error.secretKey\n      });\n      store.set(\"adminKey\", {\n        adminKey: res.data.error.adminKey\n      });\n      setBtnLoading(false);\n      history.push(`/vendor`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    btnLoading: btnLoading,\n    submit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPSuccessNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Auth/SignIn.js"],"names":["React","store","useHistory","Login","User_api","BPSuccessNotification","requestDataFormat","SignIn","successModal","setSuccessModal","useState","message","setMessage","history","btnLoading","setBtnLoading","submit","fields","res","code","console","log","errorHandler","data","set","apiKey","error","secretKey","adminKey","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,SAASC,iBAAT,QAAkC,qCAAlC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMG,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACU,QAAN,CAAe,KAAf,CAApC;;AAEA,QAAMM,MAAM,GAAG,MAAMC,MAAN,IAAgB;AAC7BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMG,GAAG,GAAG,MAAMd,QAAQ,CAACG,MAAT,CAAgBU,MAAhB,CAAlB;;AACA,QAAIC,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYf,iBAAiB,CAACgB,YAAlB,CAA+BJ,GAAG,CAACK,IAAJ,CAASZ,OAAxC,CAAZ;AACAC,MAAAA,UAAU,CAACN,iBAAiB,CAACgB,YAAlB,CAA+BJ,GAAG,CAACK,IAAJ,CAASZ,OAAxC,CAAD,CAAV;AACAI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,MAAAA,eAAe,CAAC,MAAD,CAAf;AACD,KALD,MAKO;AACLR,MAAAA,KAAK,CAACuB,GAAN,CAAU,QAAV,EAAoB;AAAEC,QAAAA,MAAM,EAAEP,GAAG,CAACK,IAAJ,CAASG,KAAT,CAAeD;AAAzB,OAApB;AACAxB,MAAAA,KAAK,CAACuB,GAAN,CAAU,WAAV,EAAuB;AAAEG,QAAAA,SAAS,EAAET,GAAG,CAACK,IAAJ,CAASG,KAAT,CAAeC;AAA5B,OAAvB;AACA1B,MAAAA,KAAK,CAACuB,GAAN,CAAU,UAAV,EAAsB;AAAEI,QAAAA,QAAQ,EAAEV,GAAG,CAACK,IAAJ,CAASG,KAAT,CAAeE;AAA3B,OAAtB;AACAb,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,MAAAA,OAAO,CAACgB,IAAR,CAAc,SAAd;AACD;AACF,GAfD;;AAiBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEf,UAAnB;AAA+B,IAAA,MAAM,EAAEE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,YAAY,iBAAI,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CADF;AAMD,CA7BD;;AA+BA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport store from \"store\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../../components/forms/Login\";\nimport { User_api } from \"../../api/user_api\";\nimport BPSuccessNotification from \"../../components/common/BPNotification\";\nimport { requestDataFormat } from \"../../components/common/ErrorFormat\";\n\nconst SignIn = () => {\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const history = useHistory();\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await User_api.SignIn(fields);\n    if (res.code !== 200) {\n      console.log(requestDataFormat.errorHandler(res.data.message));\n      setMessage(requestDataFormat.errorHandler(res.data.message));\n      setBtnLoading(false);\n      setSuccessModal(\"true\");\n    } else {\n      store.set(\"apiKey\", { apiKey: res.data.error.apiKey });\n      store.set(\"secretKey\", { secretKey: res.data.error.secretKey });\n      store.set(\"adminKey\", { adminKey: res.data.error.adminKey });\n      setBtnLoading(false);\n      history.push(`/vendor`);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Login btnLoading={btnLoading} submit={submit} />\n      {successModal && <BPSuccessNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}