{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue = [\"Service Name\", \"Category\", \"Vehicle CC\", \"Description\", \"Price\", \"Actions\"];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData(res.data.message);\n      setFilterOption([...new Set(res.data.message.map(function (el) {\n        return el.service_name;\n      }))]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, {\n        service_name: fields.data.service_name\n      });\n    }\n\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, {\n        description: fields.data.description\n      });\n    }\n\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, {\n        price: fields.data.price\n      });\n    }\n\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, {\n        tax: fields.data.tax\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.service_id.service_name === opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    data: filterData,\n    Header: HeaderValue,\n    selected: selected,\n    filterOption: filterOption,\n    onchangeOption: (e, opt) => onchangeOption(e, opt),\n    Update: row => Update(row),\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddServiceDialog, {\n    closeModal: closeModal,\n    fields: row,\n    showToast: showToast,\n    vehicleCC: vehicle => getVehicleCC(vehicle),\n    category: category,\n    vehicle: vehicle,\n    btnLoading: btnLoading,\n    update: (updated, id) => Update_Serice(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Service;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js"],"names":["React","CommonTable","Service_Api","Category_Api","Vehicle_Api","AddServiceDialog","BPNotification","requestDataFormat","HeaderValue","Service","data","setData","useState","modalOpen","setmodalOpen","successModal","setSuccessModal","message","setMessage","row","setRow","category","setCategory","vehicle","setVehicle","filterOption","setFilterOption","filterData","setFilterData","selected","setSelected","loading","setLoading","btnLoading","setBtnLoading","addService","closeModal","getData","res","Get_Service","Get_Category","Get_Vehicle","code","messsage","Set","map","el","service_name","submit","fields","Add_Servie","showToast","errorHandler","error","Update","Update_Serice","id","row1","filter","x","_id","data1","service_id","Object","assign","description","price","tax","obj","Update_Service","getVehicleCC","vehicle_cc","Get_Vehicle_by_name","onchangeOption","e","opt","msg","setTimeout","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\n\nconst HeaderValue = [\n  \"Service Name\",\n  \"Category\",\n  \"Vehicle CC\",\n  \"Description\",\n  \"Price\",\n  \"Actions\"\n];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (res.code === 200) {\n      setData(res.data.message);\n      setCategory(category.data.message);\n      setVehicle(vehicle.data.messsage);\n      setFilterData(res.data.message);\n      setFilterOption([\n        ...new Set(\n          res.data.message.map(function(el) {\n            return el.service_name;\n          })\n        )\n      ]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Service_Api.Add_Servie(fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Serice = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n    if (row1.service_id.service_name !== fields.data.service_name) {\n      data1 = Object.assign(data1, { service_name: fields.data.service_name });\n    }\n    if (row1.description !== fields.data.description) {\n      data1 = Object.assign(data1, { description: fields.data.description });\n    }\n    if (row1.price !== fields.data.price) {\n      data1 = Object.assign(data1, { price: fields.data.price });\n    }\n    if (row1.tax !== fields.data.tax) {\n      data1 = Object.assign(data1, { tax: fields.data.tax });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n    }\n  };\n\n  const getVehicleCC = async vehicle => {\n    const vehicle_cc = await Vehicle_Api.Get_Vehicle_by_name(vehicle);\n    if (vehicle_cc.code === 200) {\n      return vehicle_cc.data.messsage;\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.service_id.service_name === opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        loading={loading}\n        data={filterData}\n        Header={HeaderValue}\n        selected={selected}\n        filterOption={filterOption}\n        onchangeOption={(e, opt) => onchangeOption(e, opt)}\n        Update={row => Update(row)}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      {modalOpen && (\n        <AddServiceDialog\n          closeModal={closeModal}\n          fields={row}\n          showToast={showToast}\n          vehicleCC={vehicle => getVehicleCC(vehicle)}\n          category={category}\n          vehicle={vehicle}\n          btnLoading={btnLoading}\n          update={(updated, id) => Update_Serice(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}