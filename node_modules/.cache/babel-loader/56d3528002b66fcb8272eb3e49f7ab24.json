{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Orders.js\";\nimport React, { Fragment } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Orders_Api } from \"../api/orders_api\";\nimport AddMobileDialog from \"../components/forms/addMobile\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue = [\"Mobile\", \"Location\", \"Service\", \"Description\", \"Amount\", \"Action\"];\n\nconst Orders = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(\"\");\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const getData = async () => {\n    const orders = await Orders_Api.Get_Orders();\n\n    if (orders.code === 200) {\n      const result = [];\n\n      if (orders.data.message.length > 0) {\n        orders.data.message.map(x => {\n          ({ ...x.orderDetails,\n            orderId: x._id\n          }); //x.orderDetails.orderId = x._id;\n\n          console.log(x.orderDetails);\n          Array.prototype.push.apply(result, x.orderDetails);\n        });\n      }\n\n      console.log(result);\n      setData(result);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Orders_Api.verifyMobile(orderId, fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n      setBtnLoading(false);\n    }\n  };\n\n  const Update = id => {\n    setOrderId(id);\n    setmodalOpen(true);\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    // setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    Update: Update,\n    Header: HeaderValue,\n    data: data,\n    page: \"orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddMobileDialog, {\n    closeModal: closeModal,\n    btnLoading: btnLoading,\n    submit: fields => submit(fields),\n    showToast: showToast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Orders;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Orders.js"],"names":["React","Fragment","CommonTable","Orders_Api","AddMobileDialog","BPNotification","requestDataFormat","HeaderValue","Orders","modalOpen","setmodalOpen","useState","data","setData","successModal","setSuccessModal","message","setMessage","loading","setLoading","orderId","setOrderId","btnLoading","setBtnLoading","getData","orders","Get_Orders","code","result","length","map","x","orderDetails","_id","console","log","Array","prototype","push","apply","closeModal","submit","fields","res","verifyMobile","showToast","errorHandler","error","Update","id","msg","setTimeout","useEffect"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Orders_Api } from \"../api/orders_api\";\nimport AddMobileDialog from \"../components/forms/addMobile\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\n\nconst HeaderValue = [\n  \"Mobile\",\n  \"Location\",\n  \"Service\",\n  \"Description\",\n  \"Amount\",\n  \"Action\"\n];\n\nconst Orders = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(\"\");\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const getData = async () => {\n    const orders = await Orders_Api.Get_Orders();\n    if (orders.code === 200) {\n      const result = [];\n      if (orders.data.message.length > 0) {\n        orders.data.message.map(x => {\n          ({ ...x.orderDetails, orderId: x._id });\n          //x.orderDetails.orderId = x._id;\n          console.log(x.orderDetails);\n          Array.prototype.push.apply(result, x.orderDetails);\n        });\n      }\n      console.log(result);\n      setData(result);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Orders_Api.verifyMobile(orderId, fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n      setBtnLoading(false);\n    }\n  };\n\n  const Update = id => {\n    setOrderId(id);\n    setmodalOpen(true);\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    // setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <Fragment>\n      <CommonTable\n        loading={loading}\n        Update={Update}\n        Header={HeaderValue}\n        data={data}\n        page=\"orders\"\n      />\n      {modalOpen && (\n        <AddMobileDialog\n          closeModal={closeModal}\n          btnLoading={btnLoading}\n          submit={fields => submit(fields)}\n          showToast={showToast}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </Fragment>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}