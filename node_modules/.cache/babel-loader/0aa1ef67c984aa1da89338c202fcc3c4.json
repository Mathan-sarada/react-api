{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\nconst HeaderValue = [\"Service Name\", \"Category\", \"Vehicle CC\", \"Description\", \"Price\", \"Actions\"];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n\n    if (res.code == 200) {\n      setData(res.data.message);\n      setCategory(res.data.message);\n      setVehicle(res.data.messsage);\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Service_Api.Add_Servie(fields);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update_Vendor = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n\n    if (row1.vendor_name !== fields.data.vendor_name) {\n      data1 = Object.assign(data1, {\n        vendor_name: fields.data.vendor_name\n      });\n    }\n\n    if (row1.email !== fields.data.email) {\n      data1 = Object.assign(data1, {\n        email: fields.data.email\n      });\n    }\n\n    if (row1.mobile !== fields.data.mobile) {\n      data1 = Object.assign(data1, {\n        mobile: fields.data.mobile\n      });\n    }\n\n    if (row1.location !== fields.data.location) {\n      data1 = Object.assign(data1, {\n        location: fields.data.location\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const getVehicleCC = vehicle => {\n    const vehicle_cc = Vehicle_Api.Get_Vehicle_by_name(vehicle);\n\n    if (vehicle_cc.code == 200) {\n      return vehicle_cc.data.message;\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    data: data,\n    Header: HeaderValue,\n    buttonLabel: \"Add Service\",\n    onClick: res => addService(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddServiceDialog, {\n    closeModal: closeModal,\n    fields: row,\n    category: category,\n    vehicle: vehicle,\n    update: (updated, id) => Update_Vendor(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Service;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Service.js"],"names":["React","CommonTable","Service_Api","Category_Api","Vehicle_Api","AddServiceDialog","BPNotification","HeaderValue","Service","data","setData","useState","modalOpen","setmodalOpen","successModal","setSuccessModal","message","setMessage","row","setRow","category","setCategory","vehicle","setVehicle","addService","closeModal","getData","res","Get_Service","Get_Category","Get_Vehicle","code","messsage","submit","fields","Add_Servie","setTimeout","Update_Vendor","id","row1","filter","x","_id","data1","vendor_name","Object","assign","email","mobile","location","obj","Update_Service","error","getVehicleCC","vehicle_cc","Get_Vehicle_by_name","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport { Service_Api } from \"../api/service_api\";\nimport { Category_Api } from \"../api/category_api\";\nimport { Vehicle_Api } from \"../api/vehicle_api\";\nimport AddServiceDialog from \"../components/forms/addService\";\nimport BPNotification from \"../components/common/BPNotification\";\n\nconst HeaderValue = [\n  \"Service Name\",\n  \"Category\",\n  \"Vehicle CC\",\n  \"Description\",\n  \"Price\",\n  \"Actions\"\n];\n\nconst Service = () => {\n  const [data, setData] = React.useState([]);\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [row, setRow] = React.useState(false);\n  const [category, setCategory] = React.useState([]);\n  const [vehicle, setVehicle] = React.useState([]);\n\n  const addService = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Service_Api.Get_Service();\n    const category = await Category_Api.Get_Category();\n    const vehicle = await Vehicle_Api.Get_Vehicle();\n    if (res.code == 200) {\n      setData(res.data.message);\n      setCategory(res.data.message);\n      setVehicle(res.data.messsage);\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Service_Api.Add_Servie(fields);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update_Vendor = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n    if (row1.vendor_name !== fields.data.vendor_name) {\n      data1 = Object.assign(data1, { vendor_name: fields.data.vendor_name });\n    }\n    if (row1.email !== fields.data.email) {\n      data1 = Object.assign(data1, { email: fields.data.email });\n    }\n    if (row1.mobile !== fields.data.mobile) {\n      data1 = Object.assign(data1, { mobile: fields.data.mobile });\n    }\n    if (row1.location !== fields.data.location) {\n      data1 = Object.assign(data1, { location: fields.data.location });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Service_Api.Update_Service(row1._id, obj);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  const getVehicleCC = vehicle => {\n    const vehicle_cc = Vehicle_Api.Get_Vehicle_by_name(vehicle);\n    if (vehicle_cc.code == 200) {\n      return vehicle_cc.data.message;\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        data={data}\n        Header={HeaderValue}\n        buttonLabel={\"Add Service\"}\n        onClick={res => addService(res)}\n      />\n      {modalOpen && (\n        <AddServiceDialog\n          closeModal={closeModal}\n          fields={row}\n          category={category}\n          vehicle={vehicle}\n          update={(updated, id) => Update_Vendor(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}