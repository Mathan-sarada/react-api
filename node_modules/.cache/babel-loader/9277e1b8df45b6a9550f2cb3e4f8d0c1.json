{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Category.js\";\nimport React, { useEffect } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport AddCategoryDialog from \"../components/forms/addCategory\";\nimport { Category_Api } from \"../api/category_api\";\nimport BPNotification from \"../components/common/BPNotification\";\nconst HeaderValue = [\"Category\", \"Status\", \"Actions\"];\n\nconst Category = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [row, setRow] = React.useState(false);\n\n  const addCategoty = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Category_Api.Get_Category();\n\n    if (res.code == 200) {\n      setData(res.data.message);\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Category_Api.Add_Category(fields);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Category = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n\n    if (row1.category_name !== fields.data.category_name) {\n      data1 = Object.assign(data1, {\n        category_name: fields.data.category_name\n      });\n    }\n\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, {\n        status: fields.data.status\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Category_Api.Update_Category(obj, id);\n\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    Header: HeaderValue,\n    buttonLabel: \"Add Category\",\n    onClick: () => addCategoty(),\n    data: data,\n    Update: row => Update(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddCategoryDialog, {\n    closeModal: closeModal,\n    fields: row,\n    update: (updated, id) => Update_Category(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Category;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Category.js"],"names":["React","useEffect","CommonTable","AddCategoryDialog","Category_Api","BPNotification","HeaderValue","Category","modalOpen","setmodalOpen","useState","successModal","setSuccessModal","message","setMessage","data","setData","row","setRow","addCategoty","closeModal","getData","res","Get_Category","code","submit","fields","Add_Category","setTimeout","Update","Update_Category","id","row1","filter","x","_id","data1","category_name","Object","assign","status","obj","error","updated"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport AddCategoryDialog from \"../components/forms/addCategory\";\nimport { Category_Api } from \"../api/category_api\";\nimport BPNotification from \"../components/common/BPNotification\";\n\nconst HeaderValue = [\"Category\", \"Status\", \"Actions\"];\n\nconst Category = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [row, setRow] = React.useState(false);\n\n  const addCategoty = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Category_Api.Get_Category();\n    if (res.code == 200) {\n      setData(res.data.message);\n    } else {\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    const res = await Category_Api.Add_Category(fields);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Category = async (fields, id) => {\n    const row1 = data.filter(x => x._id == id)[0];\n    let data1 = {};\n    if (row1.category_name !== fields.data.category_name) {\n      data1 = Object.assign(data1, {\n        category_name: fields.data.category_name\n      });\n    }\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, { status: fields.data.status });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Category_Api.Update_Category(obj, id);\n    if (res.code == 200) {\n      setmodalOpen(false);\n      setSuccessModal(true);\n      setTimeout(() => {\n        setSuccessModal(false);\n      }, 3000);\n      setMessage(res.data.message);\n      getData();\n    } else {\n      setMessage(res.data.error.message);\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        Header={HeaderValue}\n        buttonLabel={\"Add Category\"}\n        onClick={() => addCategoty()}\n        data={data}\n        Update={row => Update(row)}\n      />\n      {modalOpen && (\n        <AddCategoryDialog\n          closeModal={closeModal}\n          fields={row}\n          update={(updated, id) => Update_Category(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}