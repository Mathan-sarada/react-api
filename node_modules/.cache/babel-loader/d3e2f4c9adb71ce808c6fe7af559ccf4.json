{"ast":null,"code":"var _jsxFileName = \"/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Category.js\";\nimport React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport AddCategoryDialog from \"../components/forms/addCategory\";\nimport { Category_Api } from \"../api/category_api\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue = [\"Category\", \"Status\", \"Actions\"];\n\nconst Category = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [row, setRow] = React.useState(false);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addCategoty = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Category_Api.Get_Category();\n\n    if (res.code === 200) {\n      setData(res.data.message);\n      setFilterData(res.data.message);\n      setFilterOption([...new Set(res.data.message.map(function (el) {\n        return el.category_name;\n      }))]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Category_Api.Add_Category(fields);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n      setBtnLoading(false);\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Category = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n\n    if (row1.category_name !== fields.data.category_name) {\n      data1 = Object.assign(data1, {\n        category_name: fields.data.category_name\n      });\n    }\n\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, {\n        status: fields.data.status\n      });\n    }\n\n    const obj = {\n      data: data1\n    };\n    const res = await Category_Api.Update_Category(obj, id);\n\n    if (res.code === 200) {\n      setmodalOpen(false);\n      showToast(res.data.message);\n      setBtnLoading(false);\n      getData();\n    } else {\n      showToast(res.data.error.message);\n      setBtnLoading(false);\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.category_name === opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    loading: loading,\n    Header: HeaderValue,\n    buttonLabel: \"Add Category\",\n    onClick: () => addCategoty(),\n    data: filterData,\n    selected: selected,\n    filterOption: filterOption,\n    onchangeOption: (e, opt) => onchangeOption(e, opt),\n    Update: row => Update(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), modalOpen && /*#__PURE__*/React.createElement(AddCategoryDialog, {\n    closeModal: closeModal,\n    btnLoading: btnLoading,\n    fields: row,\n    showToast: showToast,\n    update: (updated, id) => Update_Category(updated, id),\n    submit: fields => submit(fields),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), successModal && /*#__PURE__*/React.createElement(BPNotification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default Category;","map":{"version":3,"sources":["/home/selvi/Desktop/My App Pro/vehicle-app/src/views/Category.js"],"names":["React","CommonTable","AddCategoryDialog","Category_Api","BPNotification","requestDataFormat","HeaderValue","Category","modalOpen","setmodalOpen","useState","successModal","setSuccessModal","message","setMessage","data","setData","row","setRow","filterOption","setFilterOption","filterData","setFilterData","selected","setSelected","loading","setLoading","btnLoading","setBtnLoading","addCategoty","closeModal","getData","res","Get_Category","code","Set","map","el","category_name","submit","fields","Add_Category","showToast","errorHandler","error","Update","Update_Category","id","row1","filter","x","_id","data1","Object","assign","status","obj","onchangeOption","e","opt","msg","setTimeout","useEffect","updated"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommonTable from \"../components/common/CommonTable\";\nimport AddCategoryDialog from \"../components/forms/addCategory\";\nimport { Category_Api } from \"../api/category_api\";\nimport BPNotification from \"../components/common/BPNotification\";\nimport { requestDataFormat } from \"../components/common/ErrorFormat\";\nconst HeaderValue = [\"Category\", \"Status\", \"Actions\"];\n\nconst Category = () => {\n  const [modalOpen, setmodalOpen] = React.useState(false);\n  const [successModal, setSuccessModal] = React.useState(false);\n  const [message, setMessage] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [row, setRow] = React.useState(false);\n  const [filterOption, setFilterOption] = React.useState([]);\n  const [filterData, setFilterData] = React.useState([]);\n  const [selected, setSelected] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [btnLoading, setBtnLoading] = React.useState(false);\n\n  const addCategoty = () => {\n    setRow(false);\n    setmodalOpen(!modalOpen);\n  };\n\n  const closeModal = () => {\n    setmodalOpen(!modalOpen);\n  };\n\n  const getData = async () => {\n    const res = await Category_Api.Get_Category();\n    if (res.code === 200) {\n      setData(res.data.message);\n      setFilterData(res.data.message);\n      setFilterOption([\n        ...new Set(\n          res.data.message.map(function(el) {\n            return el.category_name;\n          })\n        )\n      ]);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      return [];\n    }\n  };\n\n  const submit = async fields => {\n    setBtnLoading(true);\n    const res = await Category_Api.Add_Category(fields);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      setBtnLoading(false);\n      showToast(requestDataFormat.errorHandler(res.data.message));\n      getData();\n    } else {\n      showToast(requestDataFormat.errorHandler(res.data.error.message));\n      setBtnLoading(false);\n    }\n  };\n\n  const Update = row => {\n    setRow(row);\n    setmodalOpen(true);\n  };\n\n  const Update_Category = async (fields, id) => {\n    setBtnLoading(true);\n    const row1 = data.filter(x => x._id === id)[0];\n    let data1 = {};\n    if (row1.category_name !== fields.data.category_name) {\n      data1 = Object.assign(data1, {\n        category_name: fields.data.category_name\n      });\n    }\n    if (row1.status !== fields.data.status) {\n      data1 = Object.assign(data1, { status: fields.data.status });\n    }\n    const obj = {\n      data: data1\n    };\n    const res = await Category_Api.Update_Category(obj, id);\n    if (res.code === 200) {\n      setmodalOpen(false);\n      showToast(res.data.message);\n      setBtnLoading(false);\n      getData();\n    } else {\n      showToast(res.data.error.message);\n      setBtnLoading(false);\n    }\n  };\n\n  const onchangeOption = (e, opt) => {\n    if (opt) {\n      setSelected(opt);\n      setFilterData(data.filter(x => x.category_name === opt));\n    } else {\n      setFilterData(data);\n    }\n  };\n\n  const showToast = msg => {\n    setSuccessModal(true);\n    setTimeout(() => {\n      setSuccessModal(false);\n    }, 3000);\n    setMessage(msg);\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CommonTable\n        loading={loading}\n        Header={HeaderValue}\n        buttonLabel={\"Add Category\"}\n        onClick={() => addCategoty()}\n        data={filterData}\n        selected={selected}\n        filterOption={filterOption}\n        onchangeOption={(e, opt) => onchangeOption(e, opt)}\n        Update={row => Update(row)}\n      />\n      {modalOpen && (\n        <AddCategoryDialog\n          closeModal={closeModal}\n          btnLoading={btnLoading}\n          fields={row}\n          showToast={showToast}\n          update={(updated, id) => Update_Category(updated, id)}\n          submit={fields => submit(fields)}\n        />\n      )}\n      {successModal && <BPNotification message={message} />}\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}